/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

package org.intellij.sdk.language;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.intellij.psi.TokenType;
import io.verik.intellij.highlight.SystemVerilogTokenTypes;
@SuppressWarnings("ALL")


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>SystemVerilog.flex</tt>
 */
class SystemVerilogLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int STRING = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [8, 6, 7]
   * Total runtime size is 1040 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>13]|((ch>>7)&0x3f)]|(ch&0x7f)];
  }

  /* The ZZ_CMAP_Z table has 136 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\207\100");

  /* The ZZ_CMAP_Y table has 128 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\177\200");

  /* The ZZ_CMAP_A table has 256 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\1\1\7\1\0\1\1\1\7\22\0\1\1\1\0\1\57\1\0\1\52\3\0\1\4\1\5\1\10\1\56"+
    "\1\55\1\56\1\55\1\6\1\44\1\45\6\61\2\53\1\0\1\54\5\0\4\62\1\14\1\11\2\52\1"+
    "\12\2\52\1\13\1\52\1\15\14\52\1\55\1\60\1\55\1\0\1\3\1\2\1\35\1\16\1\32\1"+
    "\30\1\17\1\34\1\20\1\43\1\21\1\51\1\23\1\33\1\42\1\22\1\26\1\40\1\50\1\27"+
    "\1\31\1\37\1\36\1\41\1\25\1\46\1\24\1\47\1\55\1\0\1\55\202\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\1\1\3\2\4\1\1\26\3"+
    "\1\5\1\6\1\7\1\10\1\11\1\1\15\0\1\12"+
    "\1\0\17\3\1\13\13\3\1\13\70\3\1\14\2\15"+
    "\1\14\21\0\4\3\2\13\12\3\1\13\67\3\1\13"+
    "\14\3\1\13\21\3\2\15\2\0\1\16\17\0\1\17"+
    "\1\0\1\20\1\0\1\3\1\13\34\3\1\13\1\3"+
    "\2\13\2\3\1\13\3\3\1\13\30\3\1\13\11\3"+
    "\1\13\10\3\2\13\23\3\5\0\1\21\11\0\1\20"+
    "\14\3\1\13\24\3\1\13\15\3\1\13\2\3\1\13"+
    "\5\3\1\13\7\3\1\13\20\3\7\0\1\21\3\0"+
    "\45\3\2\13\13\3\10\0\25\3\7\0\17\3\3\0"+
    "\11\3\3\0\7\3\3\0\2\3\3\0\2\3\2\0"+
    "\2\3\2\0\3\3\1\0\3\3\1\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[644];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\63\0\146\0\146\0\231\0\314\0\377\0\146"+
    "\0\u0132\0\u0165\0\u0198\0\u01cb\0\u01fe\0\u0231\0\u0264\0\u0297"+
    "\0\u02ca\0\u02fd\0\u0330\0\u0363\0\u0396\0\u03c9\0\u03fc\0\u042f"+
    "\0\u0462\0\u0495\0\u04c8\0\u04fb\0\u052e\0\u0561\0\u0594\0\146"+
    "\0\146\0\146\0\u05c7\0\146\0\u05fa\0\u062d\0\u0660\0\u0693"+
    "\0\u06c6\0\u06f9\0\u072c\0\u075f\0\u0792\0\u07c5\0\u07f8\0\u082b"+
    "\0\u085e\0\u0891\0\u08c4\0\u08f7\0\u092a\0\u095d\0\u0990\0\u09c3"+
    "\0\u09f6\0\u0a29\0\u0a5c\0\u0a8f\0\u0ac2\0\u0af5\0\u0b28\0\u0b5b"+
    "\0\u0b8e\0\u0bc1\0\u0bf4\0\u0c27\0\u0c5a\0\u0c8d\0\u0cc0\0\u0cf3"+
    "\0\u0d26\0\u0d59\0\u0d8c\0\u0dbf\0\u0df2\0\u0e25\0\u0e58\0\314"+
    "\0\u0e8b\0\u0ebe\0\u0ef1\0\u0f24\0\u0f57\0\u0f8a\0\u0fbd\0\u0ff0"+
    "\0\u1023\0\u1056\0\u1089\0\u10bc\0\u10ef\0\u1122\0\u1155\0\u1188"+
    "\0\u11bb\0\u11ee\0\u1221\0\u1254\0\u1287\0\u12ba\0\u12ed\0\u1320"+
    "\0\u1353\0\u1386\0\u13b9\0\u13ec\0\u141f\0\u1452\0\u1485\0\u14b8"+
    "\0\u14eb\0\u151e\0\u1551\0\u1584\0\u15b7\0\u15ea\0\u161d\0\u1650"+
    "\0\u1683\0\u16b6\0\u16e9\0\u171c\0\u174f\0\u1782\0\u17b5\0\u17e8"+
    "\0\u181b\0\u184e\0\u1881\0\u18b4\0\u18e7\0\u191a\0\u194d\0\u1980"+
    "\0\146\0\146\0\u19b3\0\u19e6\0\u1a19\0\u1a4c\0\u1a7f\0\u1ab2"+
    "\0\u1ae5\0\u1b18\0\u1b4b\0\u1b7e\0\u1bb1\0\u1be4\0\u1c17\0\u1c4a"+
    "\0\u1c7d\0\u1cb0\0\u1ce3\0\u1d16\0\u1d49\0\u1d7c\0\u1daf\0\u1de2"+
    "\0\u1e15\0\u1e48\0\u1e7b\0\u1eae\0\u1ee1\0\u1f14\0\u1f47\0\u1f7a"+
    "\0\u1fad\0\u1fe0\0\u2013\0\u2046\0\u2079\0\u20ac\0\u20df\0\u2112"+
    "\0\u2145\0\u2178\0\u21ab\0\u21de\0\u2211\0\u2244\0\u2277\0\u22aa"+
    "\0\u22dd\0\u2310\0\u2343\0\u2376\0\u23a9\0\u23dc\0\u240f\0\u2442"+
    "\0\u2475\0\u24a8\0\u24db\0\u250e\0\u2541\0\u2574\0\u25a7\0\u25da"+
    "\0\u260d\0\u2640\0\u2673\0\u26a6\0\u26d9\0\u270c\0\u273f\0\u2772"+
    "\0\u27a5\0\u27d8\0\u280b\0\u283e\0\u2871\0\u28a4\0\u28d7\0\u290a"+
    "\0\u293d\0\u2970\0\u29a3\0\u29d6\0\u2a09\0\u2a3c\0\u2a6f\0\u2aa2"+
    "\0\u2ad5\0\u2b08\0\u2b3b\0\u2b6e\0\u2ba1\0\u2bd4\0\u2c07\0\u2c3a"+
    "\0\u2c6d\0\u2ca0\0\u2cd3\0\u2d06\0\u2d39\0\u2d6c\0\u2d9f\0\u2dd2"+
    "\0\u2e05\0\u2e38\0\u2e6b\0\u2e9e\0\u2ed1\0\u2f04\0\u2f37\0\u2f6a"+
    "\0\u2f9d\0\u2fd0\0\u3003\0\u3036\0\u3069\0\u309c\0\u30cf\0\u3102"+
    "\0\u3135\0\u3168\0\u319b\0\u31ce\0\u3201\0\u3234\0\u3267\0\u329a"+
    "\0\146\0\u32cd\0\u3300\0\u3333\0\u3366\0\u3399\0\u33cc\0\u33ff"+
    "\0\u3432\0\u3465\0\u3498\0\u34cb\0\u34fe\0\u3531\0\u3564\0\u3597"+
    "\0\u0891\0\u35ca\0\146\0\u35fd\0\u3630\0\u3663\0\u3696\0\u36c9"+
    "\0\u36fc\0\u372f\0\u3762\0\u3795\0\u37c8\0\u37fb\0\u382e\0\u3861"+
    "\0\u3894\0\u38c7\0\u38fa\0\u392d\0\u3960\0\u3993\0\u39c6\0\u39f9"+
    "\0\u3a2c\0\u3a5f\0\u3a92\0\u3ac5\0\u3af8\0\u3b2b\0\u3b5e\0\u3b91"+
    "\0\u3bc4\0\u3bf7\0\u3c2a\0\u3c5d\0\u1d7c\0\u3c90\0\u3cc3\0\u3cf6"+
    "\0\u3bc4\0\u3d29\0\u3d5c\0\u3d8f\0\u3dc2\0\u3df5\0\u3e28\0\u3e5b"+
    "\0\u3e8e\0\u3ec1\0\u3ef4\0\u3f27\0\u3f5a\0\u3f8d\0\u3fc0\0\u3ff3"+
    "\0\u4026\0\u4059\0\u408c\0\u40bf\0\u40f2\0\u4125\0\u4158\0\u418b"+
    "\0\u41be\0\u41f1\0\u4224\0\u4257\0\u428a\0\u42bd\0\u42f0\0\u4323"+
    "\0\u4356\0\u4389\0\u43bc\0\u43ef\0\u4422\0\u4455\0\u4488\0\u44bb"+
    "\0\u44ee\0\u4521\0\u4554\0\u4587\0\u45ba\0\u45ed\0\u4620\0\u4653"+
    "\0\u4686\0\u46b9\0\u46ec\0\u471f\0\u4752\0\u4785\0\u47b8\0\u47eb"+
    "\0\u481e\0\u4851\0\u4884\0\u48b7\0\u48ea\0\u491d\0\u4950\0\u4983"+
    "\0\u49b6\0\u49e9\0\u4a1c\0\u4a4f\0\u4a82\0\u4ab5\0\u4ae8\0\u4b1b"+
    "\0\u4b4e\0\u4b81\0\146\0\u4bb4\0\u4be7\0\u4c1a\0\u4c4d\0\u4c80"+
    "\0\u4cb3\0\u4ce6\0\u4d19\0\u4d4c\0\u08f7\0\u4d7f\0\u3c2a\0\u4db2"+
    "\0\u4de5\0\u4e18\0\u4e4b\0\u4e7e\0\u4eb1\0\u4ee4\0\u4f17\0\u4f4a"+
    "\0\u4f7d\0\u4fb0\0\u4fe3\0\u5016\0\u5049\0\u507c\0\u50af\0\u50e2"+
    "\0\u5115\0\u5148\0\u517b\0\u51ae\0\u51e1\0\u5214\0\u5247\0\u527a"+
    "\0\u52ad\0\u52e0\0\u5313\0\u5346\0\u5379\0\u53ac\0\u3cf6\0\u53df"+
    "\0\u5412\0\u5445\0\u5478\0\u54ab\0\u54de\0\u5511\0\u5544\0\u5577"+
    "\0\u55aa\0\u55dd\0\u5610\0\u5643\0\u5676\0\u56a9\0\u56dc\0\u570f"+
    "\0\u5742\0\u5775\0\u57a8\0\u57db\0\u580e\0\u5841\0\u5874\0\u58a7"+
    "\0\u58da\0\u590d\0\u5940\0\u5973\0\u59a6\0\u59d9\0\u5a0c\0\u5a3f"+
    "\0\u5a72\0\u5aa5\0\u5ad8\0\u5b0b\0\u5b3e\0\u5b71\0\u5ba4\0\u5bd7"+
    "\0\u5c0a\0\u5c3d\0\u5c70\0\u5ca3\0\u5cd6\0\u5d09\0\u5d3c\0\u5d6f"+
    "\0\u5da2\0\u5dd5\0\u5e08\0\u5e3b\0\u5e6e\0\u5ea1\0\u5ed4\0\u5f07"+
    "\0\u5f3a\0\u5f6d\0\u5fa0\0\u5fd3\0\u6006\0\u6039\0\u606c\0\u609f"+
    "\0\u60d2\0\u6105\0\u6138\0\u616b\0\u619e\0\u61d1\0\u6204\0\u6237"+
    "\0\u626a\0\u629d\0\u62d0\0\u6303\0\u6336\0\u6369\0\u639c\0\u63cf"+
    "\0\u6402\0\u6435\0\u6468\0\u649b\0\u64ce\0\u6501\0\u6534\0\u6567"+
    "\0\u659a\0\u65cd\0\u6600\0\u6633\0\u6666\0\u6699\0\u66cc\0\u66ff"+
    "\0\u6732\0\u6765\0\u6798\0\u67cb\0\u67fe\0\u6831\0\u6864\0\u6897"+
    "\0\u68ca\0\u68fd\0\u6930\0\u6963\0\u6996\0\u69c9\0\u69fc\0\u6a2f"+
    "\0\u6a62\0\u6a95\0\u6ac8\0\u6afb\0\u6b2e\0\u6b61\0\u6b94\0\u6bc7"+
    "\0\u6bfa\0\u6c2d\0\u6c60\0\u6c93\0\u6cc6\0\u6cf9\0\u4fb0\0\u6d2c"+
    "\0\u6d5f\0\u6d92\0\u6dc5\0\u6df8\0\u6e2b\0\u6e5e\0\u6e91\0\u6ec4"+
    "\0\u6ef7\0\u6f2a\0\u6f5d\0\u6f90\0\u6fc3\0\u6ff6\0\u7029\0\u705c"+
    "\0\u708f\0\u70c2\0\u70f5\0\u7128\0\u715b\0\u718e\0\u71c1\0\u71f4"+
    "\0\u7227\0\u725a\0\u728d\0\u72c0\0\u72f3\0\u7326\0\u7359\0\u738c"+
    "\0\u73bf\0\u73f2\0\u7425\0\u7458\0\u748b\0\u74be\0\u74f1\0\u7524"+
    "\0\u7557\0\u758a\0\u75bd\0\u75f0\0\u7623\0\u7656\0\u7689\0\u76bc"+
    "\0\u76ef\0\u7722\0\u7755\0\u7788\0\u77bb\0\u77ee\0\u7821\0\u7854"+
    "\0\u7887\0\u78ba\0\u78ed\0\u7920\0\u7953\0\u7986\0\u79b9\0\u79ec"+
    "\0\u7a1f\0\u7a52\0\u7a85\0\u7ab8\0\u7aeb\0\u7b1e\0\u7b51\0\u7b84"+
    "\0\u7bb7\0\u7bea\0\u7c1d\0\u7c50";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[644];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\4"+
    "\1\3\5\6\1\12\1\13\1\14\1\15\1\16\2\6"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\2\3"+
    "\1\36\2\6\1\37\1\6\1\3\1\40\1\10\1\41"+
    "\1\42\2\3\1\6\7\43\1\3\47\43\1\44\1\45"+
    "\2\43\66\0\1\46\12\0\1\47\1\50\1\0\1\51"+
    "\1\52\4\0\1\53\1\54\1\0\1\55\1\56\2\0"+
    "\1\57\1\60\1\61\25\0\1\6\5\0\43\6\5\0"+
    "\2\6\10\0\1\62\60\0\1\63\1\0\1\64\55\0"+
    "\1\6\5\0\6\6\1\65\1\6\1\66\2\6\1\67"+
    "\2\6\1\70\6\6\1\71\15\6\5\0\2\6\3\0"+
    "\1\6\5\0\11\6\1\72\5\6\1\73\2\6\1\74"+
    "\5\6\1\75\4\6\1\76\5\6\5\0\2\6\3\0"+
    "\1\6\5\0\6\6\1\77\13\6\1\100\20\6\5\0"+
    "\2\6\3\0\1\6\5\0\7\6\1\101\1\6\1\102"+
    "\10\6\1\103\1\104\5\6\1\105\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\106\6\6\1\107\6\6"+
    "\1\110\1\111\3\6\1\112\11\6\5\0\2\6\3\0"+
    "\1\6\5\0\6\6\1\113\1\6\1\114\4\6\1\115"+
    "\6\6\1\116\5\6\1\117\10\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\120\6\6\1\121\15\6\5\0"+
    "\2\6\3\0\1\6\5\0\6\6\1\122\2\6\1\123"+
    "\7\6\1\123\2\6\1\124\1\6\1\125\1\123\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\126\1\6"+
    "\1\127\4\6\1\120\25\6\5\0\2\6\3\0\1\130"+
    "\5\0\6\6\1\131\1\6\1\132\2\6\1\133\1\6"+
    "\1\134\3\6\1\135\3\6\1\136\1\137\1\140\1\6"+
    "\1\141\1\142\10\6\5\0\2\6\3\0\1\6\5\0"+
    "\6\6\1\111\6\6\1\143\1\144\3\6\1\145\1\6"+
    "\1\146\4\6\1\112\1\147\10\6\5\0\2\6\3\0"+
    "\1\6\5\0\6\6\1\150\1\6\1\151\4\6\1\152"+
    "\6\6\1\153\16\6\5\0\2\6\3\0\1\6\5\0"+
    "\10\6\1\154\4\6\1\155\7\6\1\156\15\6\5\0"+
    "\2\6\3\0\1\6\5\0\11\6\1\157\6\6\1\160"+
    "\1\161\1\162\2\6\1\163\15\6\5\0\2\6\3\0"+
    "\1\6\5\0\11\6\1\164\2\6\1\165\3\6\1\166"+
    "\22\6\5\0\2\6\3\0\1\6\5\0\10\6\1\167"+
    "\2\6\1\170\2\6\1\171\5\6\1\172\5\6\1\173"+
    "\10\6\5\0\2\6\3\0\1\6\5\0\15\6\1\174"+
    "\1\175\5\6\1\176\1\177\3\6\1\112\11\6\5\0"+
    "\2\6\3\0\1\6\5\0\6\6\1\200\1\6\1\201"+
    "\4\6\1\202\6\6\1\115\16\6\5\0\2\6\3\0"+
    "\1\6\5\0\6\6\1\203\6\6\1\204\6\6\1\205"+
    "\16\6\5\0\2\6\3\0\1\6\5\0\10\6\1\206"+
    "\32\6\5\0\2\6\3\0\1\6\5\0\11\6\1\207"+
    "\3\6\1\115\25\6\5\0\2\6\3\0\1\6\5\0"+
    "\15\6\1\210\25\6\5\0\2\6\7\43\1\0\47\43"+
    "\2\0\2\43\7\211\1\0\12\211\1\212\11\211\2\212"+
    "\1\211\1\212\1\211\1\212\2\211\2\213\1\214\10\211"+
    "\2\212\1\213\1\211\3\0\1\215\1\216\75\0\1\217"+
    "\65\0\1\220\10\0\1\221\51\0\1\222\11\0\1\223"+
    "\54\0\1\224\53\0\1\225\62\0\1\226\62\0\1\227"+
    "\64\0\1\230\63\0\1\231\61\0\1\232\70\0\1\233"+
    "\33\0\10\62\1\234\52\62\7\63\1\0\53\63\10\64"+
    "\1\235\52\64\3\0\1\6\5\0\7\6\1\236\13\6"+
    "\1\237\17\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\240\14\6\1\120\14\6\5\0\2\6\3\0\1\6"+
    "\5\0\26\6\1\166\14\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\241\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\23\6\1\242\17\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\243\5\6\1\244\15\6\5\0\2\6"+
    "\3\0\1\6\5\0\7\6\1\166\33\6\5\0\2\6"+
    "\3\0\1\6\5\0\20\6\1\166\22\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\245\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\246\1\247\13\6\5\0"+
    "\2\6\3\0\1\6\5\0\11\6\1\250\31\6\5\0"+
    "\2\6\3\0\1\6\5\0\15\6\1\251\25\6\5\0"+
    "\2\6\3\0\1\6\5\0\11\6\1\252\31\6\5\0"+
    "\2\6\3\0\1\6\5\0\10\6\1\253\7\6\1\254"+
    "\1\255\4\6\1\256\1\257\13\6\5\0\2\6\3\0"+
    "\1\6\5\0\22\6\1\260\20\6\5\0\2\6\3\0"+
    "\1\6\5\0\11\6\1\261\11\6\1\120\17\6\5\0"+
    "\2\6\3\0\1\6\5\0\27\6\1\262\13\6\5\0"+
    "\2\6\3\0\1\6\5\0\7\6\1\263\4\6\1\120"+
    "\11\6\1\264\6\6\1\265\5\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\120\1\6\1\266\5\6\1\242"+
    "\14\6\5\0\2\6\3\0\1\6\5\0\11\6\1\157"+
    "\31\6\5\0\2\6\3\0\1\6\5\0\22\6\1\267"+
    "\20\6\5\0\2\6\3\0\1\6\5\0\15\6\1\270"+
    "\25\6\5\0\2\6\3\0\1\6\5\0\24\6\1\271"+
    "\16\6\5\0\2\6\3\0\1\6\5\0\16\6\1\166"+
    "\3\6\1\272\3\6\1\273\14\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\120\24\6\5\0\2\6\3\0"+
    "\1\6\5\0\10\6\1\274\1\157\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\275\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\276\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\7\6\1\120\10\6\1\277\1\6"+
    "\1\300\1\120\1\301\1\6\1\302\1\303\10\6\1\304"+
    "\2\6\5\0\2\6\3\0\1\6\5\0\31\6\1\112"+
    "\11\6\5\0\2\6\3\0\1\6\5\0\11\6\1\305"+
    "\31\6\5\0\2\6\3\0\1\6\5\0\16\6\1\306"+
    "\24\6\5\0\2\6\3\0\1\6\5\0\20\6\1\307"+
    "\2\6\1\310\1\311\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\20\6\1\312\22\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\313\2\6\1\314\12\6\1\315\1\316"+
    "\15\6\5\0\2\6\3\0\1\6\5\0\37\6\1\317"+
    "\3\6\5\0\2\6\3\0\1\6\5\0\7\6\1\320"+
    "\33\6\5\0\2\6\3\0\1\6\5\0\11\6\1\321"+
    "\31\6\5\0\2\6\3\0\1\6\5\0\22\6\1\322"+
    "\1\150\17\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\323\16\6\5\0\2\6\3\0\1\6\5\0\27\6"+
    "\1\324\13\6\5\0\2\6\3\0\1\6\5\0\16\6"+
    "\1\325\5\6\1\326\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\327\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\24\6\1\111\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\330\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\331\16\6\1\332\12\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\333\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\334\6\6\1\333\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\335\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\336\15\6"+
    "\1\337\16\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\120\14\6\5\0\2\6\3\0\1\6\5\0\5\6"+
    "\1\340\35\6\5\0\2\6\3\0\1\6\5\0\7\6"+
    "\1\341\1\6\1\342\7\6\1\343\21\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\73\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\344\4\6\1\345\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\346\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\347\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\17\6\1\120\23\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\350\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\21\6\1\351\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\10\6\1\352\3\6"+
    "\1\353\26\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\354\14\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\355\7\6\1\356\5\6\1\357\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\360\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\120\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\31\6\1\361\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\27\6\1\362\13\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\363\13\6\1\364\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\5\6\1\275\1\6"+
    "\1\365\10\6\1\366\22\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\270\5\6\1\367\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\20\6\1\263\22\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\370\4\6\1\371\25\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\372\2\6"+
    "\1\373\21\6\5\0\2\6\3\0\1\6\5\0\16\6"+
    "\1\166\3\6\1\374\20\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\375\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\16\6\1\376\24\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\157\32\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\377\23\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\u0100\23\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\u0101\4\6\1\u0102\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\7\6\1\u0103\33\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\115\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u0104\32\6\5\0\2\6"+
    "\44\0\2\u0105\13\0\1\u0105\12\0\1\u0106\2\0\1\u0106"+
    "\1\0\2\u0106\10\0\1\u0106\1\0\1\u0106\1\0\2\u0106"+
    "\6\0\2\u0106\5\0\1\u0106\5\0\2\u0106\11\0\1\u0107"+
    "\1\0\1\u0108\47\0\5\216\1\u0109\55\216\20\0\1\u010a"+
    "\72\0\1\u010b\63\0\1\u010c\63\0\1\u010d\52\0\1\u010e"+
    "\5\0\1\u010f\70\0\1\u0110\55\0\1\u0111\65\0\1\u0112"+
    "\61\0\1\u0113\51\0\1\u0114\70\0\1\u0115\1\0\1\u0116"+
    "\72\0\1\u0117\55\0\1\u0118\25\0\5\62\1\u0119\1\0"+
    "\1\62\1\u011a\52\62\6\64\1\u011b\1\64\1\u011c\52\64"+
    "\3\0\1\6\5\0\10\6\1\u011d\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\360\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\17\6\1\120\1\u011e\22\6\5\0"+
    "\2\6\3\0\1\6\5\0\24\6\1\366\16\6\5\0"+
    "\2\6\3\0\1\6\5\0\10\6\1\u011f\32\6\5\0"+
    "\2\6\3\0\1\6\5\0\7\6\1\u0120\1\u0121\7\6"+
    "\1\u0122\1\u0123\1\6\1\u0124\2\6\1\u0125\1\u0126\1\6"+
    "\1\u0127\11\6\5\0\2\6\3\0\1\6\5\0\31\6"+
    "\1\120\11\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u0128\31\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u0129\34\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u012a\6\6\1\u012b\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u012c\21\6\1\u012d\12\6\5\0\2\6"+
    "\3\0\1\6\5\0\5\6\1\344\35\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\u012e\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\u012f\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u0130\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\u0131\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u0132\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\25\6\1\150\15\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u0133\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\u0134\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\u0135\4\6\1\u0136\20\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0137\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u0138\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u0139\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\32\6\1\u013a\10\6"+
    "\5\0\2\6\3\0\1\6\5\0\22\6\1\120\20\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\120\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\12\6\1\u013b\30\6"+
    "\5\0\2\6\3\0\1\6\5\0\17\6\1\u013c\23\6"+
    "\5\0\2\6\3\0\1\6\5\0\32\6\1\u013d\10\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u013e\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\22\6\1\166\20\6"+
    "\5\0\2\6\3\0\1\6\5\0\27\6\1\257\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u013f\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0140\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\22\6\1\u0141\20\6"+
    "\5\0\2\6\3\0\1\6\5\0\25\6\1\u0142\15\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0143\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0144\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\17\6\1\u0145\23\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\364\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\10\6\1\u0146\32\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\u0147\2\6"+
    "\1\u0148\13\6\5\0\2\6\3\0\1\6\5\0\20\6"+
    "\1\u0149\22\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u014a\1\6\1\120\14\6\5\0\2\6\3\0\1\6"+
    "\5\0\30\6\1\u014b\12\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u014c\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\22\6\1\u014d\20\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\u014e\31\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\u014f\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\u0150\31\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\u0151\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\30\6\1\166\12\6\5\0\2\6\3\0\1\6"+
    "\5\0\22\6\1\u0152\20\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\115\20\6\1\u0153\13\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u0154\4\6\1\u0155\7\6"+
    "\1\u012a\15\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\341\14\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\u0156\21\6\5\0\2\6\3\0\1\6\5\0\14\6"+
    "\1\u0157\1\6\1\u0158\24\6\5\0\2\6\3\0\1\6"+
    "\5\0\20\6\1\u0159\2\6\1\u015a\2\6\1\u015b\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u015c\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\270\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\21\6\1\u015d\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u015e\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\21\6\1\u015f\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\u0160\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\u0161\3\6"+
    "\1\u0162\20\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u0163\32\6\5\0\2\6\3\0\1\6\5\0\7\6"+
    "\1\u0164\33\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u0165\16\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\267\16\6\5\0\2\6\3\0\1\6\5\0\20\6"+
    "\1\u0166\22\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u0167\3\6\1\u0168\6\6\1\166\21\6\5\0\2\6"+
    "\3\0\1\6\5\0\21\6\1\u0169\21\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u012b\1\6\1\u0146\14\6"+
    "\1\u016a\15\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u016b\34\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\270\16\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u016c\16\6\5\0\2\6\3\0\1\6\5\0\15\6"+
    "\1\u016d\25\6\5\0\2\6\3\0\1\6\5\0\15\6"+
    "\1\u011d\21\6\1\u016e\3\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\132\32\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\u016f\2\6\1\u0170\27\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\166\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u0171\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u0172\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\115\1\u0173\5\6\1\110"+
    "\6\6\2\120\6\6\5\0\2\6\3\0\1\6\5\0"+
    "\11\6\1\242\31\6\5\0\2\6\3\0\1\6\5\0"+
    "\7\6\1\u0150\33\6\5\0\2\6\3\0\1\6\5\0"+
    "\12\6\1\120\30\6\5\0\2\6\3\0\1\6\5\0"+
    "\15\6\1\u0174\25\6\5\0\2\6\3\0\1\6\5\0"+
    "\15\6\1\u0175\13\6\1\u0176\11\6\5\0\2\6\3\0"+
    "\1\6\5\0\7\6\1\u0177\16\6\1\u0178\1\u0179\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\u017a\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\12\6\1\u017b\30\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\u017c\1\6"+
    "\1\u017d\20\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u017e\14\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u017f\14\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u0180\32\6\5\0\2\6\3\0\1\6\5\0\25\6"+
    "\1\275\1\6\1\u0181\13\6\5\0\2\6\3\0\1\6"+
    "\5\0\16\6\1\u0182\24\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\u0183\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\32\6\1\u0184\10\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\u0185\31\6\5\0\2\6\44\0\2\212"+
    "\13\0\1\212\12\0\1\212\2\0\1\212\1\0\2\212"+
    "\10\0\1\212\1\0\1\212\1\0\2\212\6\0\2\212"+
    "\5\0\1\212\5\0\2\212\12\0\1\u0186\62\0\1\u0187"+
    "\71\0\1\u0188\44\0\1\u0189\15\0\1\u018a\10\0\1\55"+
    "\47\0\1\u018b\1\0\1\u018a\74\0\1\u018c\57\0\1\u010f"+
    "\51\0\1\u018a\65\0\1\u018d\57\0\1\u018e\64\0\1\230"+
    "\13\0\1\u018f\60\0\1\u0190\46\0\1\u018b\62\0\1\u0191"+
    "\71\0\1\u0192\53\0\1\u0193\63\0\1\u0194\42\0\5\62"+
    "\1\u0119\2\62\1\u011a\52\62\6\64\1\u0195\1\64\1\u011c"+
    "\52\64\3\0\1\6\5\0\11\6\1\120\31\6\5\0"+
    "\2\6\3\0\1\6\5\0\15\6\1\u0196\25\6\5\0"+
    "\2\6\3\0\1\6\5\0\23\6\1\u0197\17\6\5\0"+
    "\2\6\3\0\1\6\5\0\6\6\1\u0198\7\6\1\u0199"+
    "\24\6\5\0\2\6\3\0\1\6\5\0\11\6\1\u019a"+
    "\31\6\5\0\2\6\3\0\1\6\5\0\6\6\1\131"+
    "\20\6\1\u019b\13\6\5\0\2\6\3\0\1\6\5\0"+
    "\15\6\1\u019c\4\6\1\145\1\6\1\74\5\6\1\u019d"+
    "\10\6\5\0\2\6\3\0\1\6\5\0\25\6\1\156"+
    "\15\6\5\0\2\6\3\0\1\6\5\0\24\6\1\u019e"+
    "\16\6\5\0\2\6\3\0\1\6\5\0\16\6\1\u019f"+
    "\5\6\1\u01a0\16\6\5\0\2\6\3\0\1\6\5\0"+
    "\15\6\1\u01a1\25\6\5\0\2\6\3\0\1\6\5\0"+
    "\26\6\1\u01a2\14\6\5\0\2\6\3\0\1\6\5\0"+
    "\11\6\1\u01a3\4\6\1\u011d\24\6\5\0\2\6\3\0"+
    "\1\6\5\0\21\6\1\150\21\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\150\24\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\u01a4\24\6\5\0\2\6\3\0"+
    "\1\6\5\0\24\6\1\115\16\6\5\0\2\6\3\0"+
    "\1\6\5\0\16\6\1\u01a5\24\6\5\0\2\6\3\0"+
    "\1\6\5\0\10\6\1\u01a6\32\6\5\0\2\6\3\0"+
    "\1\6\5\0\17\6\1\u01a7\23\6\5\0\2\6\3\0"+
    "\1\6\5\0\25\6\1\u01a8\15\6\5\0\2\6\3\0"+
    "\1\6\5\0\7\6\1\u01a9\6\6\1\u01aa\24\6\5\0"+
    "\2\6\3\0\1\6\5\0\7\6\1\u01ab\33\6\5\0"+
    "\2\6\3\0\1\6\5\0\11\6\1\166\31\6\5\0"+
    "\2\6\3\0\1\6\5\0\16\6\1\u01ac\24\6\5\0"+
    "\2\6\3\0\1\6\5\0\6\6\1\u01ad\1\6\1\u01ae"+
    "\32\6\5\0\2\6\3\0\1\6\5\0\17\6\1\73"+
    "\23\6\5\0\2\6\3\0\1\6\5\0\13\6\1\u01af"+
    "\27\6\5\0\2\6\3\0\1\6\5\0\26\6\1\u01b0"+
    "\14\6\5\0\2\6\3\0\1\6\5\0\15\6\1\u01b1"+
    "\25\6\5\0\2\6\3\0\1\6\5\0\33\6\2\120"+
    "\6\6\5\0\2\6\3\0\1\6\5\0\21\6\1\u01b2"+
    "\21\6\5\0\2\6\3\0\1\u01b3\5\0\43\6\5\0"+
    "\2\6\3\0\1\6\5\0\16\6\1\u01b4\24\6\5\0"+
    "\2\6\3\0\1\6\5\0\24\6\1\74\16\6\5\0"+
    "\2\6\3\0\1\6\5\0\16\6\1\u011d\24\6\5\0"+
    "\2\6\3\0\1\6\5\0\24\6\1\150\16\6\5\0"+
    "\2\6\3\0\1\6\5\0\21\6\1\u01b5\21\6\5\0"+
    "\2\6\3\0\1\6\5\0\20\6\1\u01b6\1\u01b7\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\7\6\1\u011d\33\6"+
    "\5\0\2\6\3\0\1\6\5\0\25\6\1\u01b8\15\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\u0177\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\307\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\5\6\1\275\35\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u01b9\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\35\6\1\265\5\6"+
    "\5\0\2\6\3\0\1\6\5\0\14\6\1\u01ba\26\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u01bb\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u01bc\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\157\34\6"+
    "\5\0\2\6\3\0\1\u01bd\5\0\43\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u01be\16\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\u01bf\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\u01c0\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\u01c1\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u01c2\16\6\1\u0148\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\21\6\1\u01c3\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u01c4\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u01c5\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\10\6\1\u01c0\32\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u01c6\1\6"+
    "\1\u01c7\32\6\5\0\2\6\3\0\1\6\5\0\16\6"+
    "\1\u01c8\24\6\5\0\2\6\3\0\1\6\5\0\12\6"+
    "\1\u01c9\30\6\5\0\2\6\3\0\1\6\5\0\35\6"+
    "\2\120\4\6\5\0\2\6\3\0\1\6\5\0\12\6"+
    "\1\u01ca\30\6\5\0\2\6\3\0\1\6\5\0\17\6"+
    "\1\275\23\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u01cb\16\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u01cc\32\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\120\21\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u01cd\32\6\5\0\2\6\3\0\1\6\5\0\22\6"+
    "\1\u01ce\20\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u01cf\14\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u01d0\3\6\1\u01ca\12\6\5\0\2\6\3\0\1\6"+
    "\5\0\40\6\1\u01d1\2\6\5\0\2\6\3\0\1\6"+
    "\5\0\26\6\1\u01d2\14\6\5\0\2\6\3\0\1\6"+
    "\5\0\31\6\1\166\11\6\5\0\2\6\3\0\1\6"+
    "\5\0\27\6\1\u01b5\13\6\5\0\2\6\3\0\1\6"+
    "\5\0\13\6\1\u01d3\27\6\5\0\2\6\3\0\1\6"+
    "\5\0\31\6\1\u01d4\11\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\u01d5\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\22\6\1\u01d6\20\6\5\0\2\6\3\0\1\6"+
    "\5\0\27\6\1\u0150\13\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\u01d7\1\6\1\u01d8\13\6\5\0\2\6"+
    "\3\0\1\6\5\0\17\6\1\u01d9\23\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u01c0\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\25\6\1\u01da\15\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\u01db\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u01dc\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\u01dd\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u01de\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u01df\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\31\6\1\u01e0\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\157\15\6\1\73\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u01e1\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\17\6\1\u01e2\5\6"+
    "\1\u01e3\5\6\2\120\6\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\u01be\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\344\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\244\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\u012b\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\u01e4\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\32\6\1\u01ae\10\6\5\0\2\6\3\0\1\6"+
    "\5\0\36\6\1\u0197\4\6\5\0\2\6\3\0\1\u01e5"+
    "\5\0\40\6\1\u01e6\2\6\5\0\2\6\13\0\1\u01e7"+
    "\64\0\1\u01e7\67\0\1\u01e8\63\0\1\u01e9\73\0\1\u018b"+
    "\64\0\1\u01ea\56\0\1\u0116\67\0\1\u01eb\61\0\1\u01ec"+
    "\54\0\1\u01ed\66\0\1\u01ee\50\0\1\u01ef\71\0\1\u01f0"+
    "\73\0\1\u01f1\23\0\1\6\5\0\23\6\1\120\17\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\u01f2\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\15\6\1\u01f3\25\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u01f4\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u01f5\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\u01f6\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\336\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\5\6\1\275\12\6"+
    "\1\366\22\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u01f7\4\6\1\u01f8\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\u01f9\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\u01fa\23\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\u01fb\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\270\23\6\5\0\2\6\3\0\1\6"+
    "\5\0\24\6\1\67\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u01fc\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\24\6\1\u01fd\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u01fe\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\17\6\1\166\23\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u01ff\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\20\6\1\u0200\2\6\1\u0201\17\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u0202\16\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\u0203\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\31\6\1\u0204\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\270\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\27\6\1\166\13\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u016a\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\14\6\1\u0157\26\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u0205\16\6\5\0\2\6"+
    "\3\0\1\6\5\0\15\6\1\u0206\25\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u012a\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\u0207\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\131\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\150\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\u0208\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u0209\16\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u016f\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\u020a\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\u020b\5\6\1\u020c\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\u0150\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\13\6\1\u0197\27\6"+
    "\5\0\2\6\3\0\1\6\5\0\7\6\1\120\33\6"+
    "\5\0\2\6\3\0\1\6\5\0\7\6\1\u013b\33\6"+
    "\5\0\2\6\3\0\1\6\5\0\23\6\1\u020d\17\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\u020e\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\10\6\1\u01cd\5\6"+
    "\1\u020f\24\6\5\0\2\6\3\0\1\6\5\0\16\6"+
    "\1\u0210\24\6\5\0\2\6\3\0\1\6\5\0\35\6"+
    "\1\150\5\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u0211\31\6\5\0\2\6\3\0\1\6\5\0\7\6"+
    "\1\u0212\17\6\1\u0213\13\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\u0154\32\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\115\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\16\6\1\u020d\24\6\5\0\2\6\3\0\1\6"+
    "\5\0\20\6\1\150\22\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\150\31\6\5\0\2\6\3\0\1\6"+
    "\5\0\27\6\1\u0148\13\6\5\0\2\6\3\0\1\u0214"+
    "\5\0\43\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\u0215\21\6\5\0\2\6\3\0\1\6\5\0\15\6"+
    "\1\236\25\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u0216\32\6\5\0\2\6\3\0\1\6\5\0\20\6"+
    "\1\u0217\22\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\326\16\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u0218\34\6\5\0\2\6\3\0\1\u0219\5\0\43\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\u021a\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\u021b\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0196\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\7\6\1\u021c\33\6"+
    "\5\0\2\6\3\0\1\6\5\0\10\6\1\u021d\32\6"+
    "\5\0\2\6\3\0\1\6\5\0\26\6\1\u021e\14\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\244\16\6"+
    "\5\0\2\6\3\0\1\6\5\0\21\6\1\u021f\21\6"+
    "\5\0\2\6\3\0\1\6\5\0\16\6\1\u021d\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0220\34\6"+
    "\5\0\2\6\3\0\1\6\5\0\20\6\1\u0221\22\6"+
    "\5\0\2\6\3\0\1\6\5\0\15\6\1\u0222\25\6"+
    "\5\0\2\6\3\0\1\6\5\0\27\6\1\120\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\31\6\1\u0127\11\6"+
    "\5\0\2\6\3\0\1\6\5\0\11\6\1\261\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\15\6\1\u0223\25\6"+
    "\5\0\2\6\14\0\1\u0224\51\0\1\u0189\76\0\1\u0225"+
    "\73\0\1\u0114\67\0\1\u0226\60\0\1\u0227\46\0\1\u0228"+
    "\64\0\1\u0229\63\0\1\u022a\72\0\1\u022b\65\0\1\u018b"+
    "\30\0\1\6\5\0\6\6\1\u012c\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\25\6\1\u01e3\15\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u022c\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\21\6\1\u022d\21\6\5\0\2\6"+
    "\3\0\1\6\5\0\23\6\1\u015a\17\6\5\0\2\6"+
    "\3\0\1\6\5\0\31\6\1\u0176\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\7\6\1\u0177\17\6\1\u0179\13\6"+
    "\5\0\2\6\3\0\1\6\5\0\12\6\1\u022e\30\6"+
    "\5\0\2\6\3\0\1\6\5\0\25\6\1\275\15\6"+
    "\5\0\2\6\3\0\1\6\5\0\24\6\1\u022f\16\6"+
    "\5\0\2\6\3\0\1\u0230\5\0\43\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\u0231\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u0232\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\u0233\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u012a\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u020a\16\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\u01fc\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\10\6\1\u0234\32\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u0235\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\157\24\6\5\0\2\6"+
    "\3\0\1\6\5\0\16\6\1\u0236\24\6\5\0\2\6"+
    "\3\0\1\u0216\5\0\43\6\5\0\2\6\3\0\1\6"+
    "\5\0\26\6\1\u0237\14\6\5\0\2\6\3\0\1\6"+
    "\5\0\13\6\1\270\27\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\166\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u0238\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\161\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\13\6\1\120\27\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\u0239\31\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\344\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\24\6\1\u0164\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\25\6\1\166\15\6\5\0\2\6\3\0\1\6"+
    "\5\0\16\6\1\u0199\24\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\u0164\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\31\6\1\u023a\11\6\5\0\2\6\3\0\1\6"+
    "\5\0\32\6\1\120\10\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\u011d\25\6\5\0\2\6\3\0\1\u023b"+
    "\5\0\43\6\5\0\2\6\3\0\1\6\5\0\33\6"+
    "\1\120\7\6\5\0\2\6\3\0\1\6\5\0\14\6"+
    "\1\u023c\26\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\150\32\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u023d\34\6\5\0\2\6\3\0\1\6\5\0\32\6"+
    "\1\u023e\10\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u020d\14\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\322\32\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u0150\14\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u01ca\14\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u023f\14\6\5\0\2\6\3\0\1\6\5\0\14\6"+
    "\1\u011d\26\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u0240\32\6\5\0\2\6\3\0\1\u0241\103\0\1\u0242"+
    "\71\0\1\u0243\66\0\1\u0244\57\0\1\56\50\0\1\u0245"+
    "\57\0\1\u0246\100\0\1\u0247\30\0\1\6\5\0\16\6"+
    "\1\u0248\24\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u01c2\32\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\73\16\6\5\0\2\6\3\0\1\6\5\0\22\6"+
    "\1\u0249\20\6\5\0\2\6\3\0\1\6\5\0\5\6"+
    "\1\u024a\35\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u024b\32\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u024c\31\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u024d\32\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u024e\31\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u024f\31\6\5\0\2\6\3\0\1\6\5\0\17\6"+
    "\1\u01ca\23\6\5\0\2\6\3\0\1\6\5\0\40\6"+
    "\1\304\2\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\u0250\21\6\5\0\2\6\3\0\1\6\5\0\24\6"+
    "\1\u0251\16\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\u0252\1\u023a\1\u0196\17\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\u0253\32\6\5\0\2\6\3\0\1\6"+
    "\5\0\21\6\1\u0254\21\6\5\0\2\6\3\0\1\6"+
    "\5\0\15\6\1\257\25\6\5\0\2\6\3\0\1\6"+
    "\5\0\13\6\1\u0255\27\6\5\0\2\6\3\0\1\6"+
    "\5\0\11\6\1\u0256\31\6\5\0\2\6\3\0\1\u018b"+
    "\104\0\1\u0257\70\0\1\u018b\32\0\1\u0258\76\0\1\u01eb"+
    "\75\0\1\u0259\63\0\1\u0114\32\0\1\6\5\0\23\6"+
    "\1\u0201\17\6\5\0\2\6\3\0\1\6\5\0\22\6"+
    "\1\u020d\20\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u025a\32\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u023e\31\6\5\0\2\6\3\0\1\6\5\0\20\6"+
    "\1\u025b\22\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u025c\31\6\5\0\2\6\3\0\1\6\5\0\21\6"+
    "\1\u025d\21\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\270\14\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u025e\34\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u01d0\14\6\5\0\2\6\3\0\1\6\5\0\15\6"+
    "\1\u025f\25\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u0215\14\6\5\0\2\6\3\0\1\6\5\0\10\6"+
    "\1\u0260\32\6\5\0\2\6\3\0\1\6\5\0\22\6"+
    "\1\u0261\20\6\5\0\2\6\3\0\1\u0262\5\0\43\6"+
    "\5\0\2\6\26\0\1\u0263\56\0\1\u0264\77\0\1\u0265"+
    "\26\0\1\6\5\0\11\6\1\270\31\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\u0266\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\26\6\1\u0267\14\6\5\0\2\6"+
    "\3\0\1\6\5\0\17\6\1\u0268\23\6\5\0\2\6"+
    "\3\0\1\6\5\0\22\6\1\u0269\20\6\5\0\2\6"+
    "\3\0\1\6\5\0\31\6\1\u026a\11\6\5\0\2\6"+
    "\3\0\1\6\5\0\20\6\1\u01d2\22\6\5\0\2\6"+
    "\3\0\1\6\5\0\6\6\1\u026b\34\6\5\0\2\6"+
    "\3\0\1\6\5\0\24\6\1\u026c\16\6\5\0\2\6"+
    "\27\0\1\u026d\52\0\1\u026e\62\0\1\u026f\46\0\1\6"+
    "\5\0\24\6\1\u01bc\16\6\5\0\2\6\3\0\1\6"+
    "\5\0\6\6\1\u0270\34\6\5\0\2\6\3\0\1\6"+
    "\5\0\10\6\1\115\32\6\5\0\2\6\3\0\1\6"+
    "\5\0\22\6\1\u0150\20\6\5\0\2\6\3\0\1\6"+
    "\5\0\5\6\1\120\35\6\5\0\2\6\3\0\1\u0271"+
    "\5\0\43\6\5\0\2\6\3\0\1\6\5\0\11\6"+
    "\1\u020d\31\6\5\0\2\6\30\0\1\u0272\71\0\1\u0273"+
    "\53\0\1\u0274\35\0\1\6\5\0\16\6\1\u0275\24\6"+
    "\5\0\2\6\3\0\1\6\5\0\15\6\1\u0276\25\6"+
    "\5\0\2\6\31\0\1\u018b\70\0\1\u0277\26\0\1\u0278"+
    "\62\0\1\6\5\0\21\6\1\u0279\21\6\5\0\2\6"+
    "\3\0\1\6\5\0\11\6\1\u027a\31\6\5\0\2\6"+
    "\24\0\1\u027b\66\0\1\u027c\35\0\1\6\5\0\15\6"+
    "\1\u027d\25\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u027e\10\6\1\u027f\23\6\5\0\2\6\40\0\1\u0114"+
    "\51\0\1\u0280\36\0\1\6\5\0\11\6\1\u0281\31\6"+
    "\5\0\2\6\3\0\1\6\5\0\30\6\1\u0282\12\6"+
    "\5\0\2\6\3\0\1\6\5\0\6\6\1\u0283\34\6"+
    "\5\0\2\6\21\0\1\u0284\44\0\1\6\5\0\11\6"+
    "\1\u0200\31\6\5\0\2\6\3\0\1\6\5\0\6\6"+
    "\1\u01cd\34\6\5\0\2\6\3\0\1\6\5\0\26\6"+
    "\1\u0200\14\6\5\0\2\6\41\0\1\u0114\21\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31875];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\2\11\3\1\1\11\27\1\3\11\1\1\1\11"+
    "\1\1\15\0\1\1\1\0\124\1\2\11\2\1\21\0"+
    "\151\1\2\0\1\11\17\0\1\1\1\0\1\11\1\0"+
    "\151\1\5\0\1\11\11\0\122\1\7\0\1\1\3\0"+
    "\62\1\10\0\25\1\7\0\17\1\3\0\11\1\3\0"+
    "\7\1\3\0\2\1\3\0\2\1\2\0\2\1\2\0"+
    "\3\1\1\0\3\1\1\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[644];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  SystemVerilogLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return TokenType.BAD_CHARACTER;
            } 
            // fall through
          case 18: break;
          case 2: 
            { return TokenType.WHITE_SPACE;
            } 
            // fall through
          case 19: break;
          case 3: 
            { return SystemVerilogTokenTypes.IDENTIFIER;
            } 
            // fall through
          case 20: break;
          case 4: 
            { return SystemVerilogTokenTypes.PUNCTUATION;
            } 
            // fall through
          case 21: break;
          case 5: 
            { return SystemVerilogTokenTypes.SEMICOLON;
            } 
            // fall through
          case 22: break;
          case 6: 
            { return SystemVerilogTokenTypes.OPERATOR;
            } 
            // fall through
          case 23: break;
          case 7: 
            { yybegin(STRING); return SystemVerilogTokenTypes.STRING;
            } 
            // fall through
          case 24: break;
          case 8: 
            { return SystemVerilogTokenTypes.STRING;
            } 
            // fall through
          case 25: break;
          case 9: 
            { yybegin(YYINITIAL); return SystemVerilogTokenTypes.STRING;
            } 
            // fall through
          case 26: break;
          case 10: 
            { return SystemVerilogTokenTypes.LINE_COMMENT;
            } 
            // fall through
          case 27: break;
          case 11: 
            { return SystemVerilogTokenTypes.KEYWORD;
            } 
            // fall through
          case 28: break;
          case 12: 
            { return SystemVerilogTokenTypes.INVALID_STRING_ESCAPE;
            } 
            // fall through
          case 29: break;
          case 13: 
            { return SystemVerilogTokenTypes.VALID_STRING_ESCAPE;
            } 
            // fall through
          case 30: break;
          case 14: 
            { return SystemVerilogTokenTypes.LABEL_COMMENT;
            } 
            // fall through
          case 31: break;
          case 15: 
            { return SystemVerilogTokenTypes.ATTRIBUTE;
            } 
            // fall through
          case 32: break;
          case 16: 
            { return SystemVerilogTokenTypes.BLOCK_COMMENT;
            } 
            // fall through
          case 33: break;
          case 17: 
            { return SystemVerilogTokenTypes.DIRECTIVE;
            } 
            // fall through
          case 34: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
